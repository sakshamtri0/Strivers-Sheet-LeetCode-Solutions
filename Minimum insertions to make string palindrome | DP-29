class Solution {
    public int minInsertions(String s){
         Callable<Integer> callable = () -> lcs(s);
        FutureTask<Integer> future = new FutureTask<>(callable);
        Thread t = new Thread(future);
        t.start();
        try {
            return future.get(); 
        } catch (Exception e) {
            e.printStackTrace();
            return 0;
        }
    }
    public int lcs(String s) {
        StringBuilder sb=new StringBuilder(s);
        String s1=sb.reverse().toString();
        int m=s1.length();
        int[][] dp=new int[m+1][m+1];
        for(int i=1;i<=m;i++){
            for(int j=1;j<=m;j++){
                if(s.charAt(i-1)==s1.charAt(j-1)){
                    dp[i][j]=1+dp[i-1][j-1];
                }
                else{
                    dp[i][j]=Math.max(dp[i-1][j],dp[i][j-1]);
                }
            }
        }
        return m-dp[m][m];
    }
}
